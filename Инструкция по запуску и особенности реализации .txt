Инструкция по запуску:
1. Открыть командную строку.
2. Перейти в папку с файлами кода проекта (с помощью команды cd и написать путь к файлам).
3. Запустить программу через компилятор: javac LargestTriangle.java
4. Запустить скомпилированную программу с указанием входного и выходного файла: java LargestTriangle in.txt out.txt 
Где in.txt - это имя входного файла, а  out.txt - имя выходного. 
Входной файл должен находиться в папке с файлами кода проекта. 


Особенности реализации: 
Программа получает на вход 2 аргумента (имя входного и имя выходного файла).
Имя входного файла передаётся классу ReaderInAndCalc, где файл читается по строчке.
Строка передаётся в числовой массив. Каждая координата в отдельный элемент массива. 
Если в масссив попадает не число - программа выдаст исключение по этой строчке и продолжит работу со следующими строками. 
Если длинна массива равна 6, значит введено верное количество координат. 
Далее выясняется, является ли треугольник равнобедренным (так как по условию тз программа должна выдать координаты равнобедренного треугольника).
Выясняется по формуле (X_2 - X_1)*(X_2 - X_1) + (Y_2 - Y_1)*(Y_2 - Y_1) расстояния между точками без вычисления корня, так как в этом нет необходимости. 
Сравниваюся три стороны, если две из них равны - значит  треугольник является равнобедренным. 
Затем рассчитывается площадь треугольника по формуле (X_2 - X_1)*(Y_3 - Y_1) - (X_3 - X_1)*(Y_2 - Y1)/2 и если ответ отрицательный, то он умножается на -1, чтобы сделать его положительным.
И проверяется, является ли его площадь наибольшей относительно предыдущих треугольников. Если да - сохраняется значение и его координаты в переменные класса. 

После всех рассчётов берётся массив из переменных класса с сохранёнными данными координат наибольшего треугольника и очищается от символов массива "[,]", так как  по условиям тз выходной файл должен быть в формате входного. 
Полученный результат передаётся в переменную, которая далее передаётся в класс WriteOut и создаётся новый файл с переданным результатом и названием файла, полученным на входе вторым аргументом. 